import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

apply plugin: "com.android.library"
apply plugin: "maven-publish"

dependencies {
    api "org.aspectj:aspectjrt:1.9.19"
    api project(":hugo-annotations")
}

android {
    compileSdk 33
    namespace 'hugo.weaving'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    publishing {
        singleVariant("release") {
            withSourcesJar()
            withJavadocJar()
        }
    }
}
publishing {
    publications {
        release(MavenPublication) {
            afterEvaluate {
                from components.release
            }
            groupId = 'com.jakewharton.hugo'
            artifactId = 'hugo-runtime'
            version = '1.2.2-SNAPSHOT'
        }
    }
}

android.libraryVariants.configureEach { variant ->
    variant.javaCompileProvider.configure {
        doLast {
            String[] args = [
                    "-showWeaveInfo",
                    "-1.8",
                    "-inpath", destinationDirectory.getAsFile().orNull.toString(),
                    "-aspectpath", classpath.asPath,
                    "-d", destinationDirectory.getAsFile().orNull.toString(),
                    "-classpath", classpath.asPath,
                    "-bootclasspath", android.bootClasspath.join(File.pathSeparator)
            ]

            MessageHandler handler = new MessageHandler(true)
            new Main().run(args, handler)

            def log = project.logger
            for (IMessage message : handler.getMessages(null, true)) {
                switch (message.getKind()) {
                    case IMessage.ABORT:
                    case IMessage.ERROR:
                    case IMessage.FAIL:
                        log.error message.message, message.thrown
                        break
                    case IMessage.WARNING:
                    case IMessage.INFO:
                        log.info message.message, message.thrown
                        break
                    case IMessage.DEBUG:
                        log.debug message.message, message.thrown
                        break
                }
            }
        }
    }
}
